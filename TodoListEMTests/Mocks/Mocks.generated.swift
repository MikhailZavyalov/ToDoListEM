///
/// @Generated by Mockolo
///



import CoreData
import Foundation
import UIKit
@testable import ToDoListEM


class TodoListModelProtocolMock: TodoListModelProtocol {
    init() { }


    private(set) var loadTodosCallCount = 0
    var loadTodosHandler: ((@escaping (Result<[TodoDTO], Error>) -> Void) -> ())?
    func loadTodos(completion: @escaping (Result<[TodoDTO], Error>) -> Void)  {
        loadTodosCallCount += 1
        if let loadTodosHandler = loadTodosHandler {
            loadTodosHandler(completion)
        }
        
    }

    private(set) var addCallCount = 0
    var addHandler: ((TodoDTO) -> ())?
    func add(todo: TodoDTO)  {
        addCallCount += 1
        if let addHandler = addHandler {
            addHandler(todo)
        }
        
    }

    private(set) var deleteCallCount = 0
    var deleteHandler: ((TodoDTO) -> ())?
    func delete(todo: TodoDTO)  {
        deleteCallCount += 1
        if let deleteHandler = deleteHandler {
            deleteHandler(todo)
        }
        
    }

    private(set) var editCallCount = 0
    var editHandler: ((TodoDTO) -> ())?
    func edit(todo: TodoDTO)  {
        editCallCount += 1
        if let editHandler = editHandler {
            editHandler(todo)
        }
        
    }
}
